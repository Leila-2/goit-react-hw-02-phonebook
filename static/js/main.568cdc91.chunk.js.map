{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/ContactsItem.js","components/Contacts/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Form","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","form","htmlFor","type","id","onChange","pattern","required","Component","Filter","ContactsItem","deleteFunc","onClick","Contacts","contacts","deleteHandler","list","length","map","App","filter","formSubmitHandler","contact","nanoid","findContact","find","alert","prevState","deleteContact","contactId","onFilterChange","currentTarget","getContacts","normalizedFilter","toLowerCase","includes","newContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.568cdc91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__tcvns\"};","import PropTypes from 'prop-types';\nimport s from \"../Section/Section.module.css\";\nconst Section = ({ title, children }) =>\n    (<section className={s.section}>\n        <h2 >{title}</h2>\n        {children}\n    </section>)\n\n\n\n\nSection.propTypes = {\n    title: PropTypes.string,\n    cildren: PropTypes.any\n}\nexport { Section }","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from \"../Section/Section\";\nimport s from \"../Form/Form.module.css\";\nclass Form extends Component {\n\n    state = {\n\n        name: '',\n        number: ''\n    }\n    handleChange = ({ target }) => {\n        const { name, value } = target\n        this.setState({ [name]: value })\n        //console.log(this.state)\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n        //console.log(this.state)\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <Section title='Phonebook'>\n                <form className={s.form} onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"input-name\">\n                        Name\n                </label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        id=\"input-name\"\n                        onChange={this.handleChange}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                    <label htmlFor=\"input-number\">Number</label>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        id=\"input-number\"\n                        onChange={this.handleChange}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n\n                    />\n                    <button type=\"submit\" >\n                        Add contact\n          </button>\n                </form >\n            </Section>\n\n\n        )\n    }\n}\n\n\nForm.propTypes = {\n    onSubmit: PropTypes.func,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\n\nexport default Form","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Section } from \"../Section/Section\";\nconst Filter = ({ value, onChange }) => (\n    <Section>\n        <label htmlFor=\"search\">\n            <h2>Find your contact by name</h2>\n\n            <input id=\"search\" type=\"text\" value={value} onChange={onChange} ></input>\n        </label>\n    </Section>\n\n)\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport { Filter };","import React from 'react';\n\nimport PropTypes from 'prop-types';\nconst ContactsItem = ({ id, name, number, deleteFunc }) => (\n    <li key={id}>\n        <p>{name}:{number}</p>\n        <button type=\"button\" onClick={deleteFunc}>\n            Delete\n        </button>\n    </li>\n\n)\nContactsItem.propTypes = {\n    id: PropTypes.number,\n    name: PropTypes.string,\n    number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    deleteFunc: PropTypes.func.isRequired\n}\nexport { ContactsItem }","import React from 'react';\nimport { Section } from \"../Section/Section\"\nimport { ContactsItem } from './ContactsItem';\nimport s from \"./Contacts.module.css\";\n//import s from 'components/Contacts/Contacts.module.css';\nimport PropTypes from 'prop-types';\nconst Contacts = ({ contacts, deleteHandler }) => (\n    <Section title=\"Contacts\" >\n        <ul className={s.list}>\n            {contacts.length === 0 ? (\n                <h3>Please add contact</h3>\n            ) : (contacts.map(({ name, id, number }) =>\n                <ContactsItem\n                    deleteFunc={() => deleteHandler(id)}\n                    name={name}\n                    key={id}\n                    number={number} />))}\n        </ul>\n    </Section>\n)\nContacts.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    deleteHandler: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    number: PropTypes.string,\n};\nexport { Contacts };","\nimport { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport Form from \"./components/Form/Form\";\n//import { Filter } from 'components/Filter/Filter';\nimport { Filter } from \"./components/Filter/Filter\";\nimport { Contacts } from \"./components/Contacts/Contacts\";\nimport { nanoid } from 'nanoid';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const findContact = this.state.contacts.find(contact => contact.name === name);\n\n    findContact\n      ? alert(`${name} is already in contacts!`)\n      : this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n  }\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n  onFilterChange = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n  };\n\n  render() {\n    const newContacts = this.getContacts()\n    const deleteContact = this.deleteContact\n    const onFilterChange = this.onFilterChange\n    return (\n      <div className=\"App\" >\n        <Form onSubmit={this.formSubmitHandler} />\n        <Filter value={this.state.filter} onChange={onFilterChange} />\n        <Contacts\n          contacts={newContacts}\n          deleteHandler={deleteContact}\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}